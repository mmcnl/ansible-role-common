- name: remove unwanted apt or deb packages
  apt:
    pkg: "{{ packages_to_remove }}"
    state: absent

- name: install misc apt packages
  apt:
    pkg: "{{ (base_packages + additional_packages) | difference(packages_to_skip) }}"
    cache_valid_time: 86400 # 1 day

- name: Ensure unattended-upgrades is enabled
  template:
    src: 20auto-upgrades.j2
    dest: /etc/apt/apt.conf.d/20auto-upgrades

- name: Install listchanges.conf
  template:
    src: listchanges.conf.j2
    dest: /etc/apt/listchanges.conf

- name: decide which packages to install
  set_fact:
    deb_packages_to_install: "{{ (base_deb_packages + additional_deb_packages) | difference(deb_packages_to_skip) }}"

- name: download packages and check file integrity
  get_url:
    url: "{{ item.url }}"
    checksum: "{{ item.checksum }}"
    dest: "/usr/local/src/{{ item.url | basename }}"
    mode: 0755
  with_items: "{{ deb_packages_to_install }}"

- name: Install misc deb packages
  apt:
    deb: "/usr/local/src/{{ item.url | basename }}"
  with_items: "{{ deb_packages_to_install }}"

- name: download misc executables, check file integrity, and install into /usr/local/bin
  get_url:
    url: "{{ item.url }}"
    checksum: "{{ item.checksum }}"
    dest: "/usr/local/bin/{{ item.filename }}"
    mode: 0755
  with_items: "{{ executables_to_install_via_url }}"

- name: copy executables from playbook_dir to /usr/local/bin
  copy:
    src: "{{ playbook_dir }}/files/bin/{{ item }}"
    dest: /usr/local/bin/
    mode: 0755
  with_items: "{{ executables_to_install_via_file }}"

- name: download tarballs and check file integrity
  get_url:
    url: "{{ item.url }}"
    checksum: "{{ item.tarball_checksum }}"
    dest: "/usr/local/src/{{ item.url | basename }}"
    mode: 0755
  with_items: "{{ tarball_executables_to_install_via_url }}"

- name: unpack validated tarballs into /usr/local/src
  unarchive:
    src: "/usr/local/src/{{ item.url | basename }}"
    dest: "/usr/local/src/"
    remote_src: yes
    mode: 0755
  with_items: "{{ tarball_executables_to_install_via_url }}"

- name: copy custom executables from tarballs to /usr/local/bin
  copy:
    src: "/usr/local/src/{{ item.binary_archive_src_path }}"
    dest: "/usr/local/bin/{{ item.binary_dest_filename }}"
    remote_src: yes
    mode: 0755
  with_items: "{{ tarball_executables_to_install_via_url }}"
